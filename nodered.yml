---
- import_playbook: docker.yml
  tags:
    - docker

- hosts: tx_pis
  tasks:
    - name: Ensure raspberry dependencies are installed
      become: yes
      apt:
        name:
          - pigpiod
          - sqlite3
        update_cache: yes
        cache_valid_time: 3600
      tags:
        - install

    - name: Configure pigpiod service
      #ToDo listen only on docker interface and local
      #ToDo deamon reload when changed
      become: yes
      replace:
        path: /lib/systemd/system/pigpiod.service
        regexp: 'ExecStart=/usr/bin/pigpiod -l'
        replace: 'ExecStart=/usr/bin/pigpiod'
      notify:
        - pigpiod_service

    - name: Enable pigpiod as service
      become: yes
      service:
        name: pigpiod.service
        enabled: yes

    - name: Pull docker images
      become: yes
      docker_image:
        name: nodered/node-red
        source: pull

    - name: Create nodered directories
      file:
        path: "{{ansible_user_dir}}/nodered/data"
        recurse: yes
        state: directory
        owner: "{{ansible_user}}"
        group: "{{ansible_user_gid}}"

    - name: Docker-compose for nodered
      template:
        src: "nodered/{{item}}"
        dest: "{{ansible_user_dir}}/nodered/{{item}}"
      with_items:
        - docker-compose.yml
        - Dockerfile
        - data/settings.js
        - data/flows.json
        - data/package.json
      register: output

    - name: Build nodered image
      become: yes
      command: docker build -t tx-pi/nodered .
      args:
        chdir: "{{ansible_user_dir}}/nodered"
      when: output is changed

    - name: Docker cleanup
      become: yes
      command: docker system prune --force
      when: output is changed

    - name: Remove old node red
      become: yes
      docker_compose:
        project_src: "{{ansible_user_dir}}/nodered/"
        state: absent
      when: output is changed

    - name: Run node red
      become: yes
      docker_compose:
        project_src: "{{ansible_user_dir}}/nodered/"

  handlers:
    - name: pigpiod_service
      become: yes
      service:
        name: pigpiod
        enabled: yes
        state: started

    #- name: rebuild_node_red
    #  command: npm rebuild
    #  args:
    #    chdir: "{{ansible_user_dir}}/nodered"

    #- name: restart_nodered
    #  docker_compose:
    #    project_src: "{{ansible_user_dir}}/nodered/"
    #    restarted: True
...
